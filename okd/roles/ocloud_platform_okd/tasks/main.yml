---
- name: Gather facts
  ansible.builtin.setup:
    gather_subset: all

- name: Create staging dir for OKD installation
  ansible.builtin.tempfile:
    state: directory
  register: ocloud_platform_okd_staging_dir

- name: Create staging subdirs
  ansible.builtin.file:
    path: "{{ ocloud_platform_okd_staging_dir['path'] }}/{{ item }}"
    state: directory
  loop:
    - bin
    - cfg

- name: Download OKD binaries
  ansible.builtin.get_url:
    url: "{{ ocloud_platform_okd_base_url }}/{{ ocloud_platform_okd_release }}/{{ item }}-{{ ocloud_platform_okd_release }}.tar.gz"
    dest: "{{ ocloud_platform_okd_staging_dir['path'] }}"
  loop:
    - openshift-client-linux
    - openshift-install-linux

- name: Extract OKD binaries
  ansible.builtin.unarchive:
    src: "{{ ocloud_platform_okd_staging_dir['path'] }}/{{ item }}-{{ ocloud_platform_okd_release }}.tar.gz"
    dest: "{{ ocloud_platform_okd_staging_dir['path'] }}/bin"
    remote_src: true
  loop:
    - openshift-client-linux
    - openshift-install-linux

- name: Template OKD configs
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ ocloud_platform_okd_staging_dir['path'] }}/cfg/{{ item }}"
  loop:
    - agent-config.yaml
    - install-config.yaml

- debug: var=ansible_env.PATH
  environment:
    PATH: "{{ ocloud_platform_okd_staging_dir['path'] }}/bin:{{ ansible_env.PATH }}"

- name: Generate OKD agent-based installer image
  ansible.builtin.shell:
    cmd: "openshift-install agent create image --dir {{ ocloud_platform_okd_staging_dir['path'] }}/cfg"
  environment:
    PATH: "{{ ocloud_platform_okd_staging_dir['path'] }}/bin:{{ ansible_env.PATH }}"

- debug:
    msg: |
       OKD agent-based installer image has been created as {{ ocloud_platform_okd_staging_dir['path'] }}/cfg/agent.x86_64.iso
       kubeconfig and kubeadmin-password can be found under {{ ocloud_platform_okd_staging_dir['path'] }}/cfg/auth/

- ansible.builtin.set_fact:
    ocloud_platform_image: "{{ ocloud_platform_okd_staging_dir['path'] }}/cfg/agent.x86_64.iso"
